import os
import mysql.connector
from mysql.connector import Error
import json
import git
import pandas as pd
import requests
import numpy as np
import json
import pymysql
import streamlit as st
import plotly.express as px
from streamlit_option_menu import option_menu
import PIL
from PIL import Image

#aggre_transaction
path1 = "C:/Users/Logesh/OneDrive/Desktop/Youtube/phonepe/pulse/data/aggregated/transaction/country/india/state/"
agg_tran_list = os.listdir(path1)

columns1 ={"States":[], "Years":[], "Quarter":[], "Transaction_type":[], "Transaction_count":[],"Transaction_amount":[] }

for state in agg_tran_list:
    cur_states =path1+state+"/"
    agg_year_list = os.listdir(cur_states)
    
    for year in agg_year_list:
        cur_years = cur_states+year+"/"
        agg_file_list = os.listdir(cur_years)

        for file in agg_file_list:
            cur_files = cur_years+file
            data = open(cur_files,"r")
            A = json.load(data)

            try:
                
                for i in A["data"]["transactionData"]:
                    name = i["name"]
                    count = i["paymentInstruments"][0]["count"]
                    amount = i["paymentInstruments"][0]["amount"]
                    columns1["Transaction_type"].append(name)
                    columns1["Transaction_count"].append(count)
                    columns1["Transaction_amount"].append(amount)
                    columns1["States"].append(state)
                    columns1["Years"].append(year)
                    columns1["Quarter"].append(int(file.strip(".json")))
                    
            except json.JSONDecodeError as e:
                    print(f"Error loading JSON from {cur_files}: {e}")

aggre_transaction = pd.DataFrame(columns1)

#aggre_user
path2 = "C:/Users/Logesh/OneDrive/Desktop/Youtube/phonepe/pulse/data/aggregated/user/country/india/state/"
agg_user_list = os.listdir(path2)

columns2 = {"States":[], "Years":[], "Quarter":[], "Brands":[],"Transaction_count":[], "Percentage":[]}

for state in agg_user_list:
    cur_states = path2+state+"/"
    agg_year_list = os.listdir(cur_states)
    
    for year in agg_year_list:
        cur_years = cur_states+year+"/"
        agg_file_list = os.listdir(cur_years)
        
        for file in agg_file_list:
            cur_files = cur_years+file
            data = open(cur_files,"r")
            B = json.load(data)

            try:

                for i in B["data"]["usersByDevice"]:
                    brand = i["brand"]
                    count = i["count"]
                    percentage = i["percentage"]
                    columns2["Brands"].append(brand)
                    columns2["Transaction_count"].append(count)
                    columns2["Percentage"].append(percentage)
                    columns2["States"].append(state)
                    columns2["Years"].append(year)
                    columns2["Quarter"].append(int(file.strip(".json")))
            
            except:
                pass

aggre_user = pd.DataFrame(columns2)

#map_transaction
path3 = "C:/Users/Logesh/OneDrive/Desktop/Youtube/phonepe/pulse/data/map/transaction/hover/country/india/state/"
map_tran_list = os.listdir(path3)

columns3 = {"States":[], "Years":[], "Quarter":[],"District":[], "Transaction_count":[],"Transaction_amount":[]}

for state in map_tran_list:
    cur_states = path3+state+"/"
    map_year_list = os.listdir(cur_states)
    
    for year in map_year_list:
        cur_years = cur_states+year+"/"
        map_file_list = os.listdir(cur_years)
        
        for file in map_file_list:
            cur_files = cur_years+file
            data = open(cur_files,"r")
            C = json.load(data)

            for i in C['data']["hoverDataList"]:
                name = i["name"]
                count = i["metric"][0]["count"]
                amount = i["metric"][0]["amount"]
                columns3["District"].append(name)
                columns3["Transaction_count"].append(count)
                columns3["Transaction_amount"].append(amount)
                columns3["States"].append(state)
                columns3["Years"].append(year)
                columns3["Quarter"].append(int(file.strip(".json")))

map_transaction = pd.DataFrame(columns3)

#map_user
path4 = "C:/Users/Logesh/OneDrive/Desktop/Youtube/phonepe/pulse/data/map/user/hover/country/india/state/"
map_user_list = os.listdir(path4)

columns4 = {"States":[], "Years":[], "Quarter":[], "Districts":[], "RegisteredUser":[], "AppOpens":[]}

for state in map_user_list:
    cur_states = path4+state+"/"
    map_year_list = os.listdir(cur_states)
    
    for year in map_year_list:
        cur_years = cur_states+year+"/"
        map_file_list = os.listdir(cur_years)
        
        for file in map_file_list:
            cur_files = cur_years+file
            data = open(cur_files,"r")
            D = json.load(data)

            for i in D["data"]["hoverData"].items():
                district = i[0]
                registereduser = i[1]["registeredUsers"]
                appopens = i[1]["appOpens"]
                columns4["Districts"].append(district)
                columns4["RegisteredUser"].append(registereduser)
                columns4["AppOpens"].append(appopens)
                columns4["States"].append(state)
                columns4["Years"].append(year)
                columns4["Quarter"].append(int(file.strip(".json")))

map_user = pd.DataFrame(columns4)

#top_transaction
path5 = "C:/Users/Logesh/OneDrive/Desktop/Youtube/phonepe/pulse/data/top/transaction/country/india/state/"
top_tran_list = os.listdir(path5)

columns5 = {"States":[], "Years":[], "Quarter":[], "Pincodes":[], "Transaction_count":[], "Transaction_amount":[]}

for state in top_tran_list:
    cur_states = path5+state+"/"
    top_year_list = os.listdir(cur_states)
    
    for year in top_year_list:
        cur_years = cur_states+year+"/"
        top_file_list = os.listdir(cur_years)
        
        for file in top_file_list:
            cur_files = cur_years+file
            data = open(cur_files,"r")
            E = json.load(data)

            for i in E["data"]["pincodes"]:
                entityName = i["entityName"]
                count = i["metric"]["count"]
                amount = i["metric"]["amount"]
                columns5["Pincodes"].append(entityName)
                columns5["Transaction_count"].append(count)
                columns5["Transaction_amount"].append(amount)
                columns5["States"].append(state)
                columns5["Years"].append(year)
                columns5["Quarter"].append(int(file.strip(".json")))

top_transaction = pd.DataFrame(columns5)

#top_user
path6 = "C:/Users/Logesh/OneDrive/Desktop/Youtube/phonepe/pulse/data/top/user/country/india/state/"
top_user_list = os.listdir(path6)

columns6 = {"States":[], "Years":[], "Quarter":[], "Pincodes":[], "RegisteredUser":[]}

for state in top_user_list:
    cur_states = path6+state+"/"
    top_year_list = os.listdir(cur_states)

    for year in top_year_list:
        cur_years = cur_states+year+"/"
        top_file_list = os.listdir(cur_years)

        for file in top_file_list:
            cur_files = cur_years+file
            data = open(cur_files,"r")
            F = json.load(data)

            for i in F["data"]["pincodes"]:
                pincode = i["name"]
                registered_users = i["registeredUsers"]
                columns6["Pincodes"].append(pincode)
                columns6["RegisteredUser"].append(registered_users)
                columns6["States"].append(state)
                columns6["Years"].append(year)
                columns6["Quarter"].append(int(file.strip(".json")))

top_user = pd.DataFrame(columns6)

# MySQL connection
mysql_conn = mysql.connector.connect(
    host='127.0.0.1',
    user='root',
    password='Mw@23051990'
)
mysql_cursor = mysql_conn.cursor()

# Create MySQL database if not exists
mysql_cursor.execute("CREATE DATABASE IF NOT EXISTS Phonepe_Project")
mysql_conn.commit()  # Commit the database creation

# Use the database
mysql_cursor.execute("USE Phonepe_Project")

# Create aggregated_transaction table
create_query1 = '''CREATE TABLE if not exists aggregated_transaction (
                    States varchar(50),
                    Years int,
                    Quarter int,
                    Transaction_type varchar(50),
                    Transaction_count bigint,
                    Transaction_amount bigint
                )'''
mysql_cursor.execute(create_query1)
mysql_conn.commit()

# Insert data into aggregated_transaction table
for index, row in aggre_transaction.iterrows():
    insert_query1 = '''INSERT INTO aggregated_transaction (
                        States, Years, Quarter, Transaction_type, Transaction_count, Transaction_amount
                    ) VALUES (%s,%s,%s,%s,%s,%s)'''
    values = (
        row["States"],
        row["Years"],
        row["Quarter"],
        row["Transaction_type"],
        row["Transaction_count"],
        row["Transaction_amount"]
    )
    mysql_cursor.execute(insert_query1, values)
    mysql_conn.commit()
    
# Create aggregated_User table 
create_query2 = '''CREATE TABLE if not exists aggregated_user (States varchar(50),
                                                                Years int,
                                                                Quarter int,
                                                                Brands varchar(50),
                                                                Transaction_count bigint,
                                                                Percentage float)'''
mysql_cursor.execute(create_query2)
mysql_conn.commit()

# Insert data into aggregated_user table
for index, row in aggre_user.iterrows():
    insert_query2 = '''INSERT INTO aggregated_user (States, Years, Quarter, Brands, Transaction_count, Percentage)
                                                VALUES (%s, %s, %s, %s, %s, %s)'''
    values = (row["States"],
              row["Years"],
              row["Quarter"],
              row["Brands"],
              row["Transaction_count"],
              row["Percentage"])

    mysql_cursor.execute(insert_query2, values)
mysql_conn.commit()    

# Create map_transaction table
create_query3 = '''CREATE TABLE if not exists map_transaction (States varchar(50),
                                                                Years int,
                                                                Quarter int,
                                                                District varchar(50),
                                                                Transaction_count bigint,
                                                                Transaction_amount float)'''
mysql_cursor.execute(create_query3)
mysql_conn.commit()

# Insert data into map_transaction table
for index, row in map_transaction.iterrows():
    insert_query3 = '''
        INSERT INTO map_Transaction (States, Years, Quarter, District, Transaction_count, Transaction_amount)
        VALUES (%s, %s, %s, %s, %s, %s)
    '''
    values = (
        row['States'],
        row['Years'],
        row['Quarter'],
        row['District'],
        row['Transaction_count'],
        row['Transaction_amount']
    )
       
    mysql_cursor.execute(insert_query3, values)
mysql_conn.commit()

#top_transaction_table
create_query5 = '''CREATE TABLE if not exists top_transaction (States varchar(50),
                                                                Years int,
                                                                Quarter int,
                                                                pincodes int,
                                                                Transaction_count bigint,
                                                                Transaction_amount bigint)'''
mysql_cursor.execute(create_query5)
mysql_conn.commit()

for index, row in top_transaction.iterrows():
    insert_query5 = '''INSERT INTO top_transaction (States, Years, Quarter, Pincodes, Transaction_count, Transaction_amount)
                        values(%s,%s,%s,%s,%s,%s)'''
    values = (row["States"],
              row["Years"],
              row["Quarter"],
              row["Pincodes"],
              row["Transaction_count"],
              row["Transaction_amount"])

    mysql_cursor.execute(insert_query5, values)
mysql_conn.commit()

#top_user_table
create_query6 = '''CREATE TABLE if not exists top_user (States varchar(50),
                                                        Years int,
                                                        Quarter int,
                                                        Pincodes int,
                                                        RegisteredUser bigint
                                                        )'''
mysql_cursor.execute(create_query6)
mysql_conn.commit()

for index, row in top_user.iterrows():
    insert_query6 = '''INSERT INTO top_user (States, Years, Quarter, Pincodes, RegisteredUser)
                        values(%s,%s,%s,%s,%s)'''
    values = (row["States"],
              row["Years"],
              row["Quarter"],
              row["Pincodes"],
              row["RegisteredUser"])

    mysql_cursor.execute(insert_query6, values)
mysql_conn.commit()

# Close the cursor and MySQL connection
mysql_cursor.close()
mysql_conn.close()

